import telebot
from telebot import types


bot = telebot.TeleBot('5791614763:AAH2G2i8tccHGsw9PvVuwD-EdNKroYy_2Hk')
# real 5791614763:AAH2G2i8tccHGsw9PvVuwD-EdNKroYy_2Hk
# test 5734914555:AAEPdNUsCpv4n49jie8C9P7TojK_McPkCIU


@bot.message_handler(commands=['start'])
def start(message):
    ID = message.chat.id
    bot.send_message(message.chat.id, f'–í–∞—à user ID: `{ID}`', parse_mode='Markdown')

    first_name = message.from_user.first_name
    last_name = message.from_user.last_name
    message_text = f'–ü—Ä–∏–≤–µ—Ç *{first_name}*! –ö–∞–∫ —É —Ç–µ–±—è –¥–µ–ª–∞? –¢–≤–æ—è —Ñ–∞–º–∏–ª–∏—è _{last_name}_?\n\n' \
                   f'–ß—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –∞–≤—Ç–æ—Ä–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å [—Å—Å—ã–ª–∫–æ–π](https://t.me/ilandroxy).'


    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    btn1 = types.KeyboardButton('–ü–µ—Ä–µ–≤–æ–¥ –∏–∑ 10-–Ω–æ–π –≤ N-–Ω—É—é')
    btn2 = types.KeyboardButton('–ü–µ—Ä–µ–≤–æ–¥ –∏–∑ N-–Ω–æ–π –≤ 10-–Ω—É—é')
    btn3 = types.KeyboardButton('–ü–µ—Ä–µ–≤–æ–¥ –∏–∑ N-–Ω–æ–π –≤ K-—Ç—É—é')
    markup.add(btn1, btn2, btn3)


    bot.send_message(message.chat.id, message_text, parse_mode='Markdown', disable_web_page_preview=True, reply_markup=markup)


@bot.message_handler(content_types=['text'])
def mess(message):
    get_message_bot = message.text.strip()

    if get_message_bot == "–ü–µ—Ä–µ–≤–æ–¥ –∏–∑ 10-–Ω–æ–π –≤ N-–Ω—É—é":
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∏ —Å–∏—Å—Ç–µ–º—É –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ:\n'
                                          '*[10-–Ω–æ–µ —á–∏—Å–ª–æ] [–í –∫–∞–∫—É—é —Å–∏—Å—Ç–µ–º—É —Å—á–∏—Å–ª–µ–Ω–∏—è]*', parse_mode='Markdown')

        @bot.message_handler(content_types=['text'])
        def message_input(message):
            try:
                text_message = message.text
                M = [int(i) for i in text_message.split()]
                x = M[0]
                n = M[1]
                print(x, n)
                N = []
                while x > 0:
                    N.append(str(x % n))
                    x //= n
                N.reverse()
                print(N)
                res_string = "".join(N)
                print(res_string)

                message_text = f"–ü–µ—Ä–µ–≤–µ–ª–∏ —á–∏—Å–ª–æ {M[0]} –∏–∑ 10-–Ω–æ–π –≤ {n}-—É—é —Å–∏—Å—Ç–µ–º—É\n–†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ: {res_string}_{n}"
                bot.send_message(message.chat.id, message_text)
            except IndexError:
                bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –¥–≤–∞ —á–∏—Å–ª–∞, —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª!")
            except ZeroDivisionError:
                bot.send_message(message.chat.id, "–ù–∞ –Ω—É–ª—å –¥–µ–ª–∏—Ç—å –Ω–µ–ª—å–∑—è, –ø–ª—é—Å –Ω—É–ª—å –≤—Å–µ–≥–¥–∞ —è–≤–ª—è–µ—Ç—Å—è –Ω—É–ª–µ–º!")
        bot.register_next_step_handler(message, message_input)

    if get_message_bot == "–ü–µ—Ä–µ–≤–æ–¥ –∏–∑ N-–Ω–æ–π –≤ 10-–Ω—É—é":
        bot.send_message(message.chat.id, '–ü–æ–∫–∞ —á—Ç–æ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º!')

    if get_message_bot == "–ü–µ—Ä–µ–≤–æ–¥ –∏–∑ N-–Ω–æ–π –≤ K-—Ç—É—é":
        bot.send_message(message.chat.id, '–ü–æ–∫–∞ —á—Ç–æ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º!')




'''
@bot.callback_query_handler(func=lambda call: True)
def step(call):
    markup = telebot.types.InlineKeyboardMarkup(row_width=1)

    if call.data == '–ö–ª—é—á–°–æ–±—ã—Ç–∏—è':
        pass

@bot.message_handler(commands=['start'])
def start(message):
    markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    btn1 = types.KeyboardButton('–†–µ–ø–µ—Ç–∏—Ç–æ—Ä')
    markup1.add(btn1)
    send_mess = f'üëã –î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫, *{message.from_user.first_name}*!'
    bot.send_message(message.chat.id, send_mess, parse_mode='Markdown', reply_markup=markup1)

    markup2 = types.InlineKeyboardMarkup(row_width=1)
    markup2.add(types.InlineKeyboardButton("–ö–Ω–æ–ø–∫–∞", callback_data="–ö–ª—é—á–°–æ–±—ã—Ç–∏—è"))
    pic_1 = open("hello.jpeg", 'rb')
    bot.send_photo(message.chat.id, pic_1, reply_markup=markup2)

@bot.message_handler(commands=['voice'])
def voice(message):

    @bot.message_handler(content_types=['text'])
    def message_input(message):
        text_message = message.text
        bot.send_message(message.chat.id, text_message)

    bot.register_next_step_handler(message, message_input)

@bot.message_handler(content_types=['text'])
def mess(message):
    get_message_bot = message.text.strip()

    if get_message_bot == "–†–µ–ø–µ—Ç–∏—Ç–æ—Ä":
        pass
'''

bot.polling(none_stop=True)





